@article{Codd1970,
	title = {A {Relational} {Model} of {Data} for {Large} {Shared} {Data} {Banks}},
	volume = {13},
	issn = {0001-0782},
	doi = {10.1145/362384.362685},
	abstract = {Future users of large data banks must be protected from having to know how the data is organized in the machine (the internal representation). A prompting service which supplies such information is not a satisfactory solution. Activities of users at terminals and most application programs should remain unaffected when the internal representation of data is changed and even when some aspects of the external representation are changed. Changes in data representation will often be needed as a result of changes in query, update, and report traffic and natural growth in the types of stored information.
Existing noninferential, formatted data systems provide users with tree-structured files or slightly more general network models of the data. In Section 1, inadequacies of these models are discussed. A model based on n-ary relations, a normal form for data base relations, and the concept of a universal data sublanguage are introduced. In Section 2, certain operations on relations (other than logical inference) are discussed and applied to the problems of redundancy and consistency in the user's model.},
	number = {6},
	urldate = {2019-02-04},
	journal = {Commun. ACM},
	author = {Codd, E. F.},
	month = jun,
	year = {1970},
	keywords = {data integrity, composition, consistency, data bank, data base, data organization, data structure, derivability, hierarchies of data, join, networks of data, predicate calculus, redundancy, relations, retrieval language, security},
	pages = {377--387},
	file = {ACM Full Text PDF:/Users/past/Zotero/storage/YFVUKW8G/Codd - 1970 - A Relational Model of Data for Large Shared Data B.pdf:application/pdf}
}

@book{Fowler2012,
	title={Patterns of Enterprise Application Architecture: Pattern Enterpr Applica Arch},
	author={Fowler, M.},
	isbn={9780133065213},
	series={Addison-Wesley Signature Series (Fowler)},
	url={https://books.google.no/books?id=vqTfNFDzzdIC},
	year={2012},
	publisher={Pearson Education}
}


@inproceedings{DrivalosKolovosPF2009,
	address = {Berlin, Heidelberg},
	series = {Lecture {Notes} in {Computer} {Science}},
	title = {Engineering a {DSL} for {Software} {Traceability}},
	isbn = {978-3-642-00434-6},
	doi = {10.1007/978-3-642-00434-6_10},
	abstract = {The software artefacts at different levels of abstraction and at different stages of the development process are closely inter-related. For developers to stay in control of the development process, traceability information must be maintained. In this paper, we present the engineering of the Traceability Metamodelling Language (TML), a metamodelling language dedicated to defining traceability metamodels. We present the abstract syntax of the language and its semantics, which are defined using a translational approach. Finally, we provide a case study that demonstrates the construction of a traceability metamodel that captures traceability information between two metamodels using TML.},
	language = {en},
	booktitle = {Software {Language} {Engineering}},
	publisher = {Springer},
	author = {Drivalos, Nikolaos and Kolovos, Dimitrios S. and Paige, Richard F. and Fernandes, Kiran J.},
	editor = {Gašević, Dragan and Lämmel, Ralf and Van Wyk, Eric},
	year = {2009},
	pages = {151--167},
	file = {Springer Full Text PDF:/Users/past/Zotero/storage/UD3BMR8D/Drivalos et al. - 2009 - Engineering a DSL for Software Traceability.pdf:application/pdf}
}
